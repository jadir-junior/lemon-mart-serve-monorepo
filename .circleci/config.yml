version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.4
jobs:
  build_server:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo/server
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - server-modules-{{ checksum "package-lock.json" }}

      # check npm dependencies for security riskis - 'npm audit' to fix
      - run: npx audit-ci --high --report-type full

      - run: npm ci

      - save_cache:
          key: web-modules-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      # ensure core formatting standards are adhered to - run 'npm run style:fix' to fix
      - run: npm run style
      - run: npm run lint

      # run tests and store tests results
      - run: npm run pretest
      - run: npm run test:ci
      - store_test_results:
          path: ./test_results

      # run code coverage and store coverage report
      - run: npm run test:nyc
      - store_artifacts:
          path: ./coverage

      - coveralls/upload

      - run:
          name: Move compiled app to workspace
          command: |
              set -exu
              mkdir -p /tmp/workspace/server
              mv dist /tmp/workspace/server

      - persist_to_workspace
          root: /tmp/workspace
          paths:
              - server
  build_webapp:
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo/webapp
    steps:
      - checkout:
          path: ~/repo
      - run: cd ..; npm run modules:init
      - restore_cache:
          keys:
            - web-modules-{{ checksum "package-lock.json" }}

      - run: npm ci
      - run: npx ngcc --properties es2015

      - save_cache:
          key: web-modules-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      - run: npm run style
      - run: npm run lint
      - run: npm run build -- --configuration=lemon-mart-server

  test_compose:
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - checkout:
          path: ~/repo
      - run: npm run modules:init
      - run:
          name: Copy built server to server/dist folder
          command: cp -avR /tmp/weorkspace/server/dist/ ./server
      - run:
          name: Copy built webapp to webapp/dist folder
          command: cp -avR /tmp/workspace/dist/ ./webapp
      - run:
          name: Restore .env files
          command: |
            set +H
            echo -e $PROJECT_DOT_ENV > .env
            echo -e $SERVER_DOT_ENV > server/.env
      - run:
          name: Compose up
          command: |
            set -x
            docker-compose up -d
      - run:
          name: Veriry web app
          command: |
            set -x
            docker run --network container:web jwilder/dockeize -wait http://localhots:80
            docker run --network container:web appropriate/curl http://localhost:80
      - run:
          name: Verify db login with api
          command: |
            set -x
            docker run --network container:lemon-mart-server jwilder/dockerize -wait http://localhost:3000
            docker run --network container:lemon-mart-server appropriate/curl \
              -H "accept: application/json" -H "Content-Type: application/json" \
              -d "$LOGIN_JSON" http://localhost:3000/v1/auth/login

workflows:
  version: 2
  build-and-test-compose:
    jobs:
      - build_server
      - build_webapp
      - test_compose:
          requires:
            - build_server
            - build_webapp
